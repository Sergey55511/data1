generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

model Data {
  id               Int            @id @default(autoincrement())
  date             DateTime       @default(now()) @db.Date()
  lot              Decimal?
  numDocument      String?
  pp               Int?
  sizeRange        SizeRange?     @relation(fields: [sizeRangeId], references: [id])
  sizeRangeId      Int?
  widthInDocument  Float?
  widthIn          Float?
  widthOut         Float?
  tareWidth        Float?
  provider         String?
  countItemsIn     Int?
  countItemsOut    Int?
  workingHours     Int?
  exercise         String?
  numProducts      Int?
  numMoving        Int?
  moneyIn          Decimal?
  moneyOut         Decimal?
  moneyDefect      Decimal?
  typeOfProcessing String?
  stock            String?
  shade            String?
  materialGroup    MaterialGroup? @relation(fields: [materialGroupId], references: [id])
  materialGroupId  Int?
  WorkpieceType    WorkpieceType? @relation(fields: [workpieceTypeId], references: [id])
  workpieceTypeId  Int?
  Operations       Operations?    @relation(fields: [operationId], references: [id])
  operationId      Int?
  userId           Int?
  managerId        Int?
  Stores           Stores?        @relation(fields: [storeId], references: [id])
  storeId          Int?
  Grade            Grade?         @relation(fields: [gradeId], references: [id])
  gradeId          Int?
  active           Boolean        @default(true)
  Productions      Productions?   @relation(fields: [productionId], references: [id])
  productionId     Int?
  modelId          Int?
  Color            Color?         @relation(fields: [colorId], references: [id])
  colorId          Int?
  Length           Length?        @relation(fields: [lengthId], references: [id])
  lengthId         Int?
  State            State?         @relation(fields: [stateId], references: [id])
  stateId          Int?
  Channel          Channel?       @relation(fields: [channelId], references: [id])
  channelId        Int?
  Users            Users?         @relation(fields: [userId], references: [id])
  Managers         Managers?      @relation(fields: [managerId], references: [id])
  Fraction         Fraction?      @relation(fields: [fractionId], references: [id])
  fractionId       Int?
  Types            Types?         @relation(fields: [typeId], references: [id])
  typeId           Int?
  Recipient        Recipients?    @relation(fields: [recipientId], references: [id])
  recipientId      Int?
  FullModels       FullModels?    @relation(fields: [fullModelId], references: [id])
  fullModelId      Int?
  task             Int?
}

model Bridge {
  id              Int            @id @default(autoincrement())
  Store           Stores?        @relation(fields: [storeId], references: [id])
  storeId         Int?
  Operation       Operations?    @relation(fields: [operationId], references: [id])
  operationId     Int?
  WorkPieceType   WorkpieceType? @relation(fields: [workpieceTypeId], references: [id])
  workpieceTypeId Int?
  Type            Types?         @relation(fields: [typeId], references: [id])
  typeId          Int?
  Grade           Grade?         @relation(fields: [gradeId], references: [id])
  gradeId         Int?
  Color           Color?         @relation(fields: [colorId], references: [id])
  colorId         Int?
  SizeRange       SizeRange?     @relation(fields: [sizeRangeId], references: [id])
  sizeRangeId     Int?
  Length          Length?        @relation(fields: [lengthId], references: [id])
  lengthId        Int?
}

model Managers {
  id                Int                 @id @default(autoincrement())
  name              String
  store             Stores?             @relation(fields: [storeId], references: [id])
  storeId           Int?
  active            Boolean             @default(true)
  Data              Data[]
  ManagerOperations ManagerOperations[]
}

model ManagerOperations {
  id          Int         @id @default(autoincrement())
  manager     Managers?   @relation(fields: [managerId], references: [id])
  managerId   Int?
  Operation   Operations? @relation(fields: [operationId], references: [id])
  operationId Int?
  active      Boolean     @default(true)
}

model Users {
  id       Int     @id @default(autoincrement())
  login    String  @unique
  password String
  key      String?
  status   String?
  store    Stores? @relation(fields: [storeId], references: [id])
  activ    Boolean @default(true)
  storeId  Int?    @map("storesId")
  Data     Data[]
}

model Stores {
  id                    Int                     @id @default(autoincrement())
  name                  String
  Data                  Data[]
  Users                 Users[]
  StoreOperationsBridge StoreOperationsBridge[]
  Productions           Productions[]
  Managers              Managers[]
  Recipients            Recipients[]
  Brige                 Bridge[]
}

model Operations {
  id                           Int                            @id @default(autoincrement())
  operation                    String                         @unique
  result                       String?
  sborka                       Int?
  activ                        Boolean                        @default(true)
  StoreOperationsBridge        StoreOperationsBridge[]
  Data                         Data[]
  ManagerOperations            ManagerOperations[]
  StateOperationBridge         StateOperationBridge[]
  Brige                        Bridge[]
  OperationWorkPieceTypeBridge OperationWorkPieceTypeBridge[]
}

model StoreOperationsBridge {
  id          Int         @id @default(autoincrement())
  store       Stores?     @relation(fields: [storeId], references: [id])
  storeId     Int?        @map("storesId")
  Operations  Operations? @relation(fields: [operationId], references: [id])
  operationId Int?
}

model Types {
  id     Int      @id @default(autoincrement())
  type   String
  active Boolean  @default(true)
  Data   Data[]
  Bridge Bridge[]
}

model Grade {
  id                       Int                        @id @default(autoincrement())
  grade                    String                     @unique
  activ                    Boolean                    @default(true)
  Data                     Data[]
  Bridge                   Bridge[]
  WorkPieceTypeGradeBridge WorkPieceTypeGradeBridge[]
}

model Fraction {
  id       Int     @id @default(autoincrement())
  fraction String  @unique
  position Int     @default(autoincrement())
  active   Boolean @default(true)
  Data     Data[]
}

model Color {
  id      Int      @id @default(autoincrement())
  color   String   @unique
  for     String?
  variant Int
  activ   Boolean  @default(true)
  Data    Data[]
  Bridge  Bridge[]
}

model FullModels {
  id               Int             @id @default(autoincrement())
  WorkpieceType    WorkpieceType?  @relation(fields: [workpieceTypeId], references: [id])
  workpieceTypeId  Int?
  Models           Models?         @relation(fields: [modelId], references: [id])
  modelId          Int?
  Profile          Profile?        @relation(fields: [profileId], references: [id])
  profileId        Int?
  SizeRangeModel   SizeRangeModel? @relation(fields: [sizeRangeModelId], references: [id])
  sizeRangeModelId Int?
  LengthModel      LengthModel?    @relation(fields: [lengthModelId], references: [id])
  lengthModelId    Int?
  Data             Data[]
  active           Boolean         @default(true)
}

model LengthModel {
  id         Int          @id @default(autoincrement())
  length     Decimal      @db.Decimal(10, 2)
  active     Boolean      @default(true)
  FullModels FullModels[]
}

model OperationWorkPieceTypeBridge {
  id              Int            @id @default(autoincrement())
  WorkpieceType   WorkpieceType? @relation(fields: [workpieceTypeId], references: [id])
  Operation       Operations?    @relation(fields: [operationsId], references: [id])
  active          Boolean        @default(true)
  workpieceTypeId Int?
  operationsId    Int?
}

model WorkPieceTypeGradeBridge {
  id              Int            @id @default(autoincrement())
  WorkpieceType   WorkpieceType? @relation(fields: [workpieceTypeId], references: [id])
  Grade           Grade?         @relation(fields: [gradeId], references: [id])
  workpieceTypeId Int?
  gradeId         Int?
}

model SizeRangeModel {
  id         Int          @id @default(autoincrement())
  sizeRange  Int
  active     Boolean      @default(true)
  FullModels FullModels[]
}

model Profile {
  id         Int          @id @default(autoincrement())
  profile    String
  active     Boolean      @default(true)
  FullModels FullModels[]
}

model Models {
  id         Int          @id @default(autoincrement())
  model      String
  active     Boolean      @default(true)
  FullModels FullModels[]
}

model SizeRange {
  id              Int      @id @default(autoincrement())
  sizeRange       String
  size            Int      @default(0)
  nextSizeRangeId Int?
  position        Int      @default(autoincrement())
  active          Boolean  @default(true)
  Data            Data[]
  Bridge          Bridge[]
}

model Length {
  id     Int      @id @default(autoincrement())
  length String
  active Boolean  @default(true)
  Data   Data[]
  Bridge Bridge[]
}

model StateOperationBridge {
  id          Int         @id @default(autoincrement())
  State       State?      @relation(fields: [stateId], references: [id])
  stateId     Int?
  Operation   Operations? @relation(fields: [operationId], references: [id])
  operationId Int?
}

model MaterialGroup {
  id            Int     @id @default(autoincrement())
  materialGroup String
  position      Int     @default(autoincrement())
  active        Boolean @default(true)
  Data          Data[]
}

model WorkpieceType {
  id                           Int                            @id @default(autoincrement())
  workpieceType                String
  nextTypeId                   Int?
  position                     Int                            @default(autoincrement())
  active                       Boolean                        @default(true)
  isShow                       Boolean                        @default(true)
  Data                         Data[]
  Brige                        Bridge[]
  FullModels                   FullModels[]
  OperationWorkPieceTypeBridge OperationWorkPieceTypeBridge[]
  WorkPieceTypeGradeBridge     WorkPieceTypeGradeBridge[]
}

model Productions {
  id          Int     @id @default(autoincrement())
  description String
  Stores      Stores? @relation(fields: [storeId], references: [id])
  storeId     Int?
  active      Boolean @default(true)
  Data        Data[]
}

model State {
  id                   Int                    @id @default(autoincrement())
  state                String
  active               Boolean                @default(true)
  Data                 Data[]
  StateOperationBridge StateOperationBridge[]
}

model Channel {
  id      Int     @id @default(autoincrement())
  channel Float
  active  Boolean @default(true)
  Data    Data[]
}

model Recipients {
  id        Int     @id @default(autoincrement())
  recipient String
  active    Boolean @default(true)
  Data      Data[]
  Stores    Stores? @relation(fields: [storeId], references: [id])
  storeId   Int?
}
