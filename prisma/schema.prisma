generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

model Data {
  id               Int            @id @default(autoincrement())
  date             DateTime       @default(now()) @db.Date()
  lot              String?
  numDocument      String?
  pp               Int?
  managerId        Int?
  manager          String?
  state            String?
  model            String?
  sizeRange        SizeRange?     @relation(fields: [sizeRangeId], references: [id])
  sizeRangeId      Int?
  length           String?
  channel          Float?
  grade            String?
  colorType        String?
  widthInDocument  Float?
  widthIn          Float?
  widthOut         Float?
  tareWidth        Float?
  provider         String?
  recipient        String?
  countItemsIn     Int?
  countItemsOut    Int?
  numProduction    String?
  workingHours     Int?
  exercise         String?
  numProducts      Int?
  numMoving        Int?
  moneyIn          Decimal?
  moneyOut         Decimal?
  moneyDefect      Decimal?
  typeOfProcessing String?
  fraction         String?
  stock            String?
  numShipment      Int?
  shade            String?
  materialGroup    MaterialGroup? @relation(fields: [materialGroupId], references: [id])
  materialGroupId  Int?
  WorkpieceType    WorkpieceType? @relation(fields: [workpieceTypeId], references: [id])
  workpieceTypeId  Int?
  Operations       Operations?    @relation(fields: [operationId], references: [id])
  operationId     Int?
}

model Users {
  id       Int     @id @default(autoincrement())
  login    String  @unique
  password String
  key      String?
  status   String?
  store    Stores? @relation(fields: [storesId], references: [id])
  activ    Boolean @default(true)
  storesId Int?
}

model Stores {
  id             Int               @id @default(autoincrement())
  name           String
  Users          Users[]
  StoreOperation StoreOperations[]
  BilletStore    BilletStore[]
}

model Opereytion {
  id                Int              @id @default(autoincrement())
  opereytion        String           @unique
  result            String?
  sborka            Int?
  activ             Boolean          @default(true)
  StoreOperations   StoreOperations? @relation(fields: [storeOperationsId], references: [id])
  storeOperationsId Int?
}

model StoreOperations {
  id         Int          @id @default(autoincrement())
  store      Stores?      @relation(fields: [storesId], references: [id])
  storesId   Int?
  Opereytion Opereytion[]
}

model Grade {
  id      Int     @id @default(autoincrement())
  grade   String  @unique
  for     String?
  variant Int
  activ   Boolean @default(true)
}

model Collor {
  id      Int     @id @default(autoincrement())
  collor  String  @unique
  for     String?
  variant Int
  activ   Boolean @default(true)
}

model Billets {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  BilletStore BilletStore[]
  Models      Models[]
  modelsId    Int?
}

model BilletStore {
  id       Int      @id @default(autoincrement())
  Billet   Billets? @relation(fields: [billetId], references: [id])
  billetId Int?
  Stores   Stores?  @relation(fields: [storesId], references: [id])
  storesId Int?
}

model Models {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  Billets     Billets?      @relation(fields: [billetsId], references: [id])
  billetsId   Int?
  ModelsSizes ModelsSizes[]
}

model ModelsSizes {
  id       Int     @id @default(autoincrement())
  size     String?
  length   String?
  Models   Models  @relation(fields: [modelsId], references: [id])
  modelsId Int
}

model SizeRange {
  id        Int     @id @default(autoincrement())
  sizeRange String
  position  Int     @default(autoincrement())
  active    Boolean @default(true)
  Data      Data[]
}

model MaterialGroup {
  id            Int     @id @default(autoincrement())
  materialGroup String
  position      Int     @default(autoincrement())
  active        Boolean @default(true)
  Data          Data[]
}

model WorkpieceType {
  id            Int     @id @default(autoincrement())
  workpieceType String
  position      Int     @default(autoincrement())
  active        Boolean @default(true)
  Data          Data[]
}

model Operations {
  id        Int     @id @default(autoincrement())
  operation String
  position  Int     @default(autoincrement())
  active    Boolean @default(true)
  Data      Data[]
}
