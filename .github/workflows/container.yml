name: ci
on:
  push:
    branches:
      - 'dev'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'dev'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          push: true
          tags: user/app:latest
   # steps:
   #   - name: Checkout
   #     uses: actions/checkout@v2.5.0
   #   - name: ls
   #     run: ls
        
   #   - name: Set up Docker Buildx
   #     uses: docker/setup-buildx-action@v2
        
   #   - name: Login to Docker Hub
   #     uses: docker/login-action@v2
   #     with:
   #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
   #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
   #   - name: Build and push
   #     uses: docker/build-push-action@v3
   #     with:
   #       context: /
   #       file: ./Dockerfile
   #       builder: ${{ steps.buildx.outputs.name }}
   #       cache: enabled
   #       push: true
   #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest
   #       cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache
   #       cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:buildcache,mode=max
          
          



          # - name: copy file via ssh password
          #   uses: appleboy/scp-action@master
          #   with:
          #     host: ${{secrets.TDATA_SERVER_HOST}}
          #     username: ${{secrets.TDATA_SERVER_USERNAME}}
          #     password: ${{secrets.TDATA_SERVER_PASSWORD}}
          #     port: ${{secrets.TDATA_SERVER_PORT}}
          #     source: "docker-compose.yml"
          #     target: "/app"
          # - name: docker-compose up
          #   uses: appleboy/ssh-action@master
          #   with:
          #     host: ${{secrets.TDATA_SERVER_HOST}}
          #     username: ${{secrets.TDATA_SERVER_USERNAME}}
          #     password: ${{secrets.TDATA_SERVER_PASSWORD}}
          #     port: ${{secrets.TDATA_SERVER_PORT}}
          #     script: |            
          #       cd /app/
          #       docker-compose down --rmi local
          #       docker image prune -a -f
          #       docker-compose up -d
